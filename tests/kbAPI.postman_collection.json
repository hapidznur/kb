{
	"info": {
		"_postman_id": "32de494b-a27a-4890-81fd-fa984ac665ed",
		"name": "kbAPI",
		"description": "### kbAPI. API access for \"kb - minimalist knowledge base manager\"\n\n![logo](https://github.com/gnebbia/kb/raw/main/img/kb_logo.png?raw=true)\n\n## Author: gnc nebbionegiuseppe@gmail.com\n\n## Copyright: Â© 2020, gnc  \n## Date: 2020-09-29    \n## Version: 0.1.4\n\n\n**kb** is a text-oriented minimalist command line knowledge base manager. kb can be considered a quick note collection and access tool oriented toward software developers, penetration testers, hackers, students or whoever has to collect and organize notes in a clean way. Although kb is mainly targeted on text-based note collection, it supports non-text files as well (e.g., images, pdf, videos and others).\n\n\nThe project was born from the frustration of trying to find a good way to quickly access my notes, procedures, cheatsheets and lists (e.g., payloads) but at the same time, keeping them organized. This is particularly useful for any kind of student. It is use in the context of penetration testing to organize pentesting procedures, cheatsheets, payloads, guides and notes.\n\n\nUsers found themselves too frequently spending time trying to search for that particular payload list quickly, or spending too much time trying to find a specific guide/cheatsheet for a needed tool. kb tries to solve this problem by providing you a quick and intuitive way to access knowledge.\n\n\nIn few words **kb** allows a user to quickly and efficiently:\n\n* collect items containing notes,guides,procedures,cheatsheets into an organized knowledge base;\n* filter the knowledge base on different metadata: title, category, tags and others;\n* visualize items within the knowledge base ;\n* grep through the knowledge base using regexes;\n* import/export an entire knowledge base;\n\n\nBasically, **kb** provides a clean text-based way to organize your knowledge.\n\n## INSTALLATION PREREQUISITES\n\nYou should have `Python 3.6` or above installed.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "List all the artifacts  in the knowledgebase",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//list",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"list"
							]
						},
						"description": "List all items in the knowledgebase"
					},
					"response": [
						{
							"name": "ListAll",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000//list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "357"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Sep 2020 19:44:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"knowledge\": \"[{\\\"id\\\":3,\\\"title\\\":\\\"ftp\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"},{\\\"id\\\":5,\\\"title\\\":\\\"ftp2\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp2\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"}]\"\n}"
						}
					]
				},
				{
					"name": "List all the artifacts  in the knowledgebase with specific titles",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/list/n1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"list",
								"n1"
							]
						},
						"description": "List all items in the knowledgebase"
					},
					"response": [
						{
							"name": "ListAll",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000//list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "357"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Sep 2020 19:44:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"knowledge\": \"[{\\\"id\\\":3,\\\"title\\\":\\\"ftp\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"},{\\\"id\\\":5,\\\"title\\\":\\\"ftp2\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp2\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"}]\"\n}"
						}
					]
				},
				{
					"name": "List knowledgebase articles in the notes category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9259917b-f17f-4899-a43f-a4ef4f382171",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/list/category/Notes",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"list",
								"category",
								"Notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export everything from the KB",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//export/all",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"export",
								"all"
							]
						},
						"description": "Export data from knowledgebase"
					},
					"response": []
				},
				{
					"name": "Export just the data from the KB",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//export/data",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"export",
								"data"
							]
						},
						"description": "Export data from knowledgebase"
					},
					"response": []
				},
				{
					"name": "View an artifact by an id",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/view/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"view",
								"1"
							]
						},
						"description": "Retrieve the details of a specific artifact by its ID"
					},
					"response": [
						{
							"name": "View an artifact by an id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/internals",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"internals"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2319"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:27:08 GMT"
								}
							],
							"cookie": [],
							"body": "{   \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						}
					]
				},
				{
					"name": "Grep all the artifacts  in the knowledgebase",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//grep/y",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"grep",
								"y"
							]
						}
					},
					"response": [
						{
							"name": "ListAll",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000//list",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"list"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "357"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Tue, 29 Sep 2020 19:44:53 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"knowledge\": \"[{\\\"id\\\":3,\\\"title\\\":\\\"ftp\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"},{\\\"id\\\":5,\\\"title\\\":\\\"ftp2\\\", \\\"category\\\":\\\"notes\\\",\\\"path\\\":\\\"notes/ftp2\\\",\\\"tags\\\":\\\"protocol;network\\\"\\\"status\\\":\\\"None\\\"\\\"author\\\":\\\"None\\\",\\\"template\\\":\\\"None\\\"}]\"\n}"
						}
					]
				},
				{
					"name": "View an artifact by title",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/view/stuff26",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"view",
								"stuff26"
							]
						},
						"description": "Retrieve the details of a specific artifact by its title"
					},
					"response": [
						{
							"name": "View an artifact by title",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/stuff26",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"stuff26"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2320"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:33:48 GMT"
								}
							],
							"cookie": [],
							"body": "{ \n    \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						}
					]
				},
				{
					"name": "View an artifact by full name",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/view/crystal/stuff26",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"view",
								"crystal",
								"stuff26"
							]
						},
						"description": "Retrieve the details of a specific artifact by its title"
					},
					"response": [
						{
							"name": "View an artifact by full name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/crystal/stuff26",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"crystal",
										"stuff26"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2320"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:31:57 GMT"
								}
							],
							"cookie": [],
							"body": "{ \n    \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						}
					]
				},
				{
					"name": "Edit an artifact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "781b3372-e5de-4e2c-a7df-b0db1ea1afe0",
								"exec": [
									"// Set test group to evaluate",
									"pm.collectionVariables.set(\"sys_test_group\",\"edit\")",
									"",
									"// Describe valid JSON schema",
									"var valid_schema={",
									"        \"properties\": {",
									"            \"Error\": {",
									"                \"type\": \"string\"",
									"            }",
									"        }",
									"};",
									"",
									"",
									"// API specific tests",
									"",
									"// Test for a correct, valid JSON schema",
									"pm.test(\"edit - Schema is valid\", function (){",
									"    pm.response.to.have.jsonSchema(valid_schema);",
									"    });",
									"",
									"// Test for a 405 status code - Method not allowed",
									"pm.test(\"edit - Status Code is 405 - Method not allowed\", function (){",
									"    pm.response.to.have.status(405);",
									"    });",
									"",
									"// Test that the Error property is there",
									"pm.test(\"edit - Error property is present\", function (){",
									"    let response = pm.response.json()",
									"    pm.expect(response).to.have.ownProperty(\"Error\");",
									"    });",
									"",
									"// Make sure that the text is correct",
									"pm.test(\"edit - Text is correct - \", function (){",
									"    let response = pm.response.json()",
									"    pm.expect(response.Error).to.eql(\"Method Never Allowed\")",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//edit",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"edit"
							]
						},
						"description": "Attempt to edit an artifact - this will ALWAYS fail."
					},
					"response": [
						{
							"name": "Edit an artifact",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000//edit",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"edit"
									]
								}
							},
							"status": "METHOD NOT ALLOWED",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "38"
								},
								{
									"key": "Allow",
									"value": "add, delete, erase, export, search, update, version, view"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 22:39:49 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Method Never Allowed\"\n}"
						}
					]
				},
				{
					"name": "List all templates",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/templates",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"templates"
							]
						}
					},
					"response": [
						{
							"name": "View an artifact by title",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/stuff26",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"stuff26"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2320"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:33:48 GMT"
								}
							],
							"cookie": [],
							"body": "{ \n    \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						}
					]
				},
				{
					"name": "Get a specific template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/template/get/temp1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"template",
								"get",
								"temp1"
							]
						}
					},
					"response": [
						{
							"name": "View an artifact by title",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/stuff26",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"stuff26"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2320"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:33:48 GMT"
								}
							],
							"cookie": [],
							"body": "{ \n    \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						},
						{
							"name": "Get a specific template",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/template/get/temp1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"template",
										"get",
										"temp1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "180"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 11:13:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Template\": \"temp1\",\n    \"Content\": \"b'IyBUaGlzIGlzIGFuIGV4YW1wbGUgY29uZmlndXJhdGlvbiB0ZW1wbGF0ZQoKClRJVExFUyA9IFsgIl4jLioiLCAiYmx1ZSIsXQpXQVJOSU5HUyA9IFsgIl4hLioiLCAieWVsbG93IixdCg=='\"\n}"
						}
					]
				},
				{
					"name": "Get the version number of the kb software in use",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6b9adf48-1336-4428-a632-a2eb5437d916",
								"exec": [
									"// Set test group to evaluate",
									"pm.collectionVariables.set(\"sys_test_group\",\"version\")",
									"",
									"// Get current version of the KB software",
									"pm.collectionVariables.get(\"current_version\")",
									"",
									"// Describe valid JSON schema",
									"var valid_schema={",
									"        \"properties\": {",
									"            \"Version\": {",
									"                \"type\": \"string\"",
									"            }",
									"        }",
									"};",
									"",
									"",
									"// API specific tests",
									"",
									"// Test for a valid http response",
									"pm.test(\"version - HTTP reasponse is OK\", function (){",
									"    pm.response.to.be.ok;",
									"    });",
									"",
									"",
									"// Test for a correct, valid JSON schema",
									"pm.test(\"version - Schema is valid\", function (){",
									"    pm.response.to.have.jsonSchema(valid_schema);",
									"    });",
									"",
									"// Test for a 200 status code",
									"pm.test(\"version - Status Code is 200\", function (){",
									"    pm.response.to.have.status(200);",
									"    });",
									"",
									"// Test that the version property is there",
									"pm.test(\"version - Version property is present\", function (){",
									"    let response = pm.response.json()",
									"    pm.expect(response).to.have.ownProperty(\"Version\");",
									"    });",
									"",
									"// Make sure that the version number is right",
									"pm.test(\"version - Version is correct - \" + pm.collectionVariables.get(\"current_version\"), function (){",
									"    let response = pm.response.json()",
									"    pm.expect(response.Version).to.equal(pm.collectionVariables.get(\"current_version\"))",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//version",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"version"
							]
						},
						"description": "Determine the version number "
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Add a new item to the knowledgebase",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "78206df2-8348-4129-bead-3908d04e0fd1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File content (cheatsheet, article etc)",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
								},
								{
									"key": "title",
									"value": "newfile22",
									"description": "Title  for the new artifact",
									"type": "text"
								},
								{
									"key": "category",
									"value": "crystal",
									"description": "Category of the new artifact",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "programming;crystal;cheats",
									"description": "Any tags to apply to the artifact",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}//add",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"add"
							]
						},
						"description": "Add a new artifact to the knowledgebase"
					},
					"response": [
						{
							"name": "Add a new item to the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/requirements.txt"
										},
										{
											"key": "title",
											"value": "newfile",
											"description": "Title  for the new artifact",
											"type": "text"
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://localhost:5000//add",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 19:38:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Added\": 3\n}"
						}
					]
				},
				{
					"name": "Create a new template  in the knowledgebase",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9346fb9-df57-483a-9dc4-4e4da97b3209",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File content (cheatsheet, article etc)",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
								},
								{
									"key": "title",
									"value": "newfile22",
									"description": "Title  for the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "category",
									"value": "crystal",
									"description": "Category of the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "programming;crystal;cheats",
									"description": "Any tags to apply to the artifact",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}//template/add/t2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"template",
								"add",
								"t2"
							]
						},
						"description": "Add a new template to the knowledgebase"
					},
					"response": [
						{
							"name": "Add a new item to the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/requirements.txt"
										},
										{
											"key": "title",
											"value": "newfile",
											"description": "Title  for the new artifact",
											"type": "text"
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://localhost:5000//add",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 19:38:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Added\": 3\n}"
						},
						{
							"name": "Create a new template  in the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/add/t3",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"add",
										"t3"
									]
								}
							},
							"status": "CONFLICT",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:33:05 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Template already exists\"\n}"
						}
					]
				},
				{
					"name": "Erase the database only",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}//erase/db",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"erase",
								"db"
							]
						},
						"description": "Erase the kb database"
					},
					"response": []
				},
				{
					"name": "Erase the whole knowledgebase",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/erase/all",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"erase",
								"all"
							]
						},
						"description": "Erase the complete knowledgebase"
					},
					"response": []
				},
				{
					"name": "Delete an artifact  by id",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/delete/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"delete",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete several artifacts  by ids",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/delete/4,5,6",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"delete",
								"4,5,6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artifact  by name",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/delete/name/ftp333",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"delete",
								"name",
								"ftp333"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import a file previously exported from a kb",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/private/tmp/test.tar.gz"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/import/",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"import",
								""
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Import a file"
					},
					"response": []
				},
				{
					"name": "Create a new default template  in the knowledgebase",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9346fb9-df57-483a-9dc4-4e4da97b3209",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File content (cheatsheet, article etc)",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
								},
								{
									"key": "title",
									"value": "newfile22",
									"description": "Title  for the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "category",
									"value": "crystal",
									"description": "Category of the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "programming;crystal;cheats",
									"description": "Any tags to apply to the artifact",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}//template/add/t2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"template",
								"add",
								"t2"
							]
						}
					},
					"response": [
						{
							"name": "Add a new item to the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/requirements.txt"
										},
										{
											"key": "title",
											"value": "newfile",
											"description": "Title  for the new artifact",
											"type": "text"
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://localhost:5000//add",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 19:38:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Added\": 3\n}"
						},
						{
							"name": "Create a new template  in the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/add/t3",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"add",
										"t3"
									]
								}
							},
							"status": "CONFLICT",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:33:05 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Template already exists\"\n}"
						},
						{
							"name": "Create a new default template  in the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/new/t2",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"new",
										"t2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:36:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Template already exists\"\n}"
						}
					]
				},
				{
					"name": "Delete a template from the knowledgebase",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9346fb9-df57-483a-9dc4-4e4da97b3209",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File content (cheatsheet, article etc)",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
								},
								{
									"key": "title",
									"value": "newfile22",
									"description": "Title  for the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "category",
									"value": "crystal",
									"description": "Category of the new artifact",
									"type": "text",
									"disabled": true
								},
								{
									"key": "tags",
									"value": "programming;crystal;cheats",
									"description": "Any tags to apply to the artifact",
									"type": "text",
									"disabled": true
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}//template/delete/t2",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"template",
								"delete",
								"t2"
							]
						}
					},
					"response": [
						{
							"name": "Create a new default template  in the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/new/t2",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"new",
										"t2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:36:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Template already exists\"\n}"
						},
						{
							"name": "Add a new item to the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/requirements.txt"
										},
										{
											"key": "title",
											"value": "newfile",
											"description": "Title  for the new artifact",
											"type": "text"
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://localhost:5000//add",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 19:38:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Added\": 3\n}"
						},
						{
							"name": "Create a new template  in the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/add/t3",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"add",
										"t3"
									]
								}
							},
							"status": "CONFLICT",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "35"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:33:05 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Error\": \"Template already exists\"\n}"
						},
						{
							"name": "Delete a new template from the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
										},
										{
											"key": "title",
											"value": "newfile22",
											"description": "Title  for the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text",
											"disabled": true
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text",
											"disabled": true
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}//template/delete/t2",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"",
										"template",
										"delete",
										"t2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "25"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 10:44:01 GMT"
								}
							],
							"cookie": [],
							"body": "{\"OK\":\"Template Removed\"}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "Update an existing item in the kb",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b90c009-bdc1-4810-b87c-2f2cf3e0a8d9",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "File content (cheatsheet, article etc)",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/MANIFEST.in"
								},
								{
									"key": "title",
									"value": "n1",
									"description": "Title  for the new artifact",
									"type": "text"
								},
								{
									"key": "category",
									"value": "n2",
									"description": "Category of the new artifact",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "tag3",
									"description": "Any tags to apply to the artifact",
									"type": "text"
								}
							],
							"options": {
								"formdata": {}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}//update/1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"",
								"update",
								"1"
							]
						},
						"description": "Add a new artifact to the knowledgebase"
					},
					"response": [
						{
							"name": "Add a new item to the knowledgebase",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "File content (cheatsheet, article etc)",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/requirements.txt"
										},
										{
											"key": "title",
											"value": "newfile",
											"description": "Title  for the new artifact",
											"type": "text"
										},
										{
											"key": "category",
											"value": "crystal",
											"description": "Category of the new artifact",
											"type": "text"
										},
										{
											"key": "tags",
											"value": "programming;crystal;cheats",
											"description": "Any tags to apply to the artifact",
											"type": "text"
										}
									],
									"options": {
										"formdata": {}
									}
								},
								"url": {
									"raw": "http://localhost:5000//add",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"",
										"add"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 19:38:13 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Added\": 3\n}"
						}
					]
				},
				{
					"name": "Update a specific named template",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "kbuser",
									"type": "string"
								},
								{
									"key": "username",
									"value": "kbuser",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/shaptona/MyProjects/kb/TODO.md"
								}
							]
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/template/update/temp1",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"template",
								"update",
								"temp1"
							]
						}
					},
					"response": [
						{
							"name": "View an artifact by title",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/view/stuff26",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"view",
										"stuff26"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2320"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Oct 2020 20:33:48 GMT"
								}
							],
							"cookie": [],
							"body": "{ \n    \"id\":1, \n    \"title\":\"stuff26\", \n    \"category\":\"crystal\", \n    \"path\":\"crystal/stuff26\",             \n    \"tags\":\"crystal;logo;svg\", \n    \"status\":\"\", \n    \"author\":\"\", \n    \"template\":\"None\"\n    \"Content\":\"b'IyBJbnRlcm5hbHMgIwoKVGhpcyBzZWN0aW9uIGRldGFpbHMgdGhlIGludGVybmFsIG1lY2hhbmlzbXMgb2Yga2IgKHNwZWNpZmljYWxseSByZWxhdGluZyB0byB0aGUgQVBJKS4KCiMgUmV0dXJuIENvZGVzICMKCldpdGhpbiBtYW55IG9mIHRoZSBmdW5jdGlvbnMgb2Yga2IsIGNvcmUgZnVuY3Rpb25hbGl0eSBtYXkgcmV0dXJuIGEgcmV0dXJuIGNvZGUsIGluZGljYXRpbmcgaXRzJyBzdGF0dXMgdXBvbiBjb21wbGV0aW9uLgpUaGlzIHNlY3Rpb24gZXhwbGFpbnMgdGhvc2UgcmV0dXJuIGNvZGVzIGFuZCB0aGVpciBtZWFuaW5nLiBOb3RlIHRoYXQgdGhpcyBpcyBpbiBhZGRpdGlvbiB0byBhbnkgZGF0YSB0aGF0IG1heSBiZSByZXR1cm5lZCBmcm9tIHRob3NlIGZ1bmN0aW9ucy4KCnwtLS0tLS0tfC0tLS0tLS18CnwgQ29kZSB8IERlc2NyaXB0aW9uIHwKfC0tLS0tLS18LS0tLS0tLXwKfCAtMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IC0zMDEgfCBUaGUgZnVuY3Rpb24gZm91bmQgbW9yZSB0aGFuIG9uZSBtYXRjaCBmb3IgdGhlIGNyaXRlcmlhIHwgICAgKiogU0hPVUxEIEJFIFVTSU5HIDMwMCBIRVJSRSAqKgp8IC0zMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCAtNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAoKCk1vc3Qgb2YgdGhlc2UgcmV0dXJuIGNvZGVzIGFyZSBwcmVzZW50ZWQgdG8gdGhlIEFQSSBpbiB0aGUgZm9ybSBvZiBhbiBIVFRQIHJlc3BvbnNlIGNvZGUuCgoKIyBIVFRQIFJlc3BvbnNlIENvZGVzICMKCkluIGdlbmVyYWwsIHRoZSBpbnRlcm5hbCByZXNwb25zZSBjb2RlcyBkZXNjaWJlZCBhYm92ZSByZWxhdGUgdG8gdGhlIEFQSSBIVFRQIHJlc3BvbnNlIGNvZGVzIChkZXNjcmliZWQgYmVsb3cpIGhvd2V2ZXIsIHNvbWUgY29kZXMgaGF2ZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFkZGVkIHRvIHRoZW0gaW4gdGhlIGRlc2NyaXB0aW9uLiBUaGVzZSBkZXNjcmlwdGlvbnMgZGlmZmVyIGFjY29yZGluZyB0byB0aGUgZnVuY3Rpb24gKHRoZXkgYXJlIGRvY3VtZW50ZWQgc2VwYXJhdGVseSkuCgp8LS0tLS0tLXwtLS0tLS0tfAp8IENvZGUgfCBEZXNjcmlwdGlvbiB8CnwtLS0tLS0tfC0tLS0tLS18CnwgMjAwIHwgVGhlIGZ1bmN0aW9uIHdhcyBjYXJyaWVkIG91dCBzdWNjZXNzZnVsbHkgfAp8IDMwMSB8IFRoZSBmdW5jdGlvbiBmb3VuZCBtb3JlIHRoYW4gb25lIG1hdGNoIGZvciB0aGUgY3JpdGVyaWEgfCAgICoqIFNIT1VMRCBCRSBVU0lORyAzMDAgSEVSUkUgKioKfCAzMDIgfCBUaGUgZnVuY2lvbiB3YXMgYXR0ZW1wdGVkLCBidXQgY291bGQgZmluZCBubyBhcnRpZmFjdHMgd2l0aCB0aGUgc2VhcmNoIGNyaXRlcmlhIChkb2VzIG5vdCBpbmNsdWRlIGJ5IElEKSB8ICoqIFNIT1VMRCBCRSBVU0lORyA0MDYgSEVSUkUgKioKfCA0MDEgfCBMb2dpbiBjcmVkZW50aWFscyByZXF1aXJlZCB8CnwgNDA0IHwgVGhlIGZ1bmN0aW9uIGVycm9yZWQgfAo='\"\n    }"
						},
						{
							"name": "Update a specific named template",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/Users/shaptona/MyProjects/kb/INTERNALS.md"
										}
									]
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/template/update/newtemp1?file",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"template",
										"update",
										"newtemp1"
									],
									"query": [
										{
											"key": "file",
											"value": null
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "37"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 19:01:08 GMT"
								}
							],
							"cookie": [],
							"body": "{\"OK\":\"Template successfully update\"}"
						},
						{
							"name": "Get a specific template",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/template/get/temp1",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"template",
										"get",
										"temp1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "180"
								},
								{
									"key": "Server",
									"value": "Werkzeug/1.0.1 Python/3.8.5"
								},
								{
									"key": "Date",
									"value": "Fri, 23 Oct 2020 11:13:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"Template\": \"temp1\",\n    \"Content\": \"b'IyBUaGlzIGlzIGFuIGV4YW1wbGUgY29uZmlndXJhdGlvbiB0ZW1wbGF0ZQoKClRJVExFUyA9IFsgIl4jLioiLCAiYmx1ZSIsXQpXQVJOSU5HUyA9IFsgIl4hLioiLCAieWVsbG93IixdCg=='\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "kbuser",
				"type": "string"
			},
			{
				"key": "username",
				"value": "kbuser",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "810780e9-3fe8-4036-99ea-7f80c13ac69a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "0d505d1b-f635-4a64-944c-6d7769404b08",
				"type": "text/javascript",
				"exec": [
					"// Test for a valid, full response",
					"pm.test(\"generic - Response must be JSON and have a body and header\", function () {",
					"     pm.response.to.have.header",
					"     pm.response.to.be.withBody;",
					"     pm.response.to.be.json;",
					"});",
					"",
					"// Test for correct content header type",
					"pm.test(\"generic - Content-Type header is application/json\", () => {",
					"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "b7202800-482c-4521-bf00-37acd0c283f6",
			"key": "current_version",
			"value": "0.1.5"
		},
		{
			"id": "2bcbdd6c-e3a4-49e9-b768-294fbe9a98fe",
			"key": "sys_test_group",
			"value": "edit"
		}
	],
	"protocolProfileBehavior": {}
}